local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()

local Window = Rayfield:CreateWindow({
    Name = "Johnny",
    LoadingTitle = "Johnny UI",
    LoadingSubtitle = "Johnny by You",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil, -- nil means default folder
        FileName = "JohnnyConfig"
    },
    Discord = {
        Enabled = false,
        Invite = "", -- discord invite code
        RememberJoins = true
    },
    KeySystem = false
})

-- Tablar
local MainTab = Window:CreateTab("Main")
local MiscTab = Window:CreateTab("Misc")

-- Main sekmeleri
local AutoFarmSection = MainTab:CreateSection("Auto-Farm")
local PlayersSection = MainTab:CreateSection("Players")
local SettingsSection = MainTab:CreateSection("Settings")
local BossStatusSection = MainTab:CreateSection("Living Bosses")
local AuraSection = MainTab:CreateSection("Aura") -- Sağ taraf için Rayfield side özelliği yok, elle ayarlanabilir
local TeleportsSection = MainTab:CreateSection("Teleports")
local InfoSection = MainTab:CreateSection("Info")

-- Misc sekmeleri
local MiscMainSection = MiscTab:CreateSection("Main")
local MiscTrollSection = MiscTab:CreateSection("Troll")
local MiscMiscSection = MiscTab:CreateSection("Misc")

-- Buraya scriptinin geri kalan kısmı aynen gelecek

local table = table 
local insert = table.insert 
local task = task
local spawn = task.spawn 
local pcall = pcall

local CoreGui = game:GetService("CoreGui")
local StarterPack = game:GetService("StarterPack")
local Workspace = game:GetService("Workspace")
local MobFolder = Workspace:WaitForChild("Mobs")
local Map = Workspace:WaitForChild("Map")
local BossFolder = MobFolder:FindFirstChild("Bosses")
local Flowers = Workspace:FindFirstChild("Demon_Flowers_Spawn")
local Debree = Workspace:WaitForChild("Debree")
local RunService = game:GetService("RunService")
local Stepped = RunService.Stepped
local Players = game:GetService("Players")
local Player = Players.LocalPlayer 
local PlayerGui = Player:WaitForChild("PlayerGui")
local PlayerScripts = Player:WaitForChild("PlayerScripts")
local PopUps = PlayerGui:WaitForChild("Pop_Ups")
local LittleBars = PopUps:WaitForChild("LitleBars_Holder")
local FuriosityDisplay = LittleBars:WaitForChild("clan_furiosity_skill123asd_display")
local Backpack = Player:WaitForChild("Backpack")
local Character = Player.Character or Player.CharacterAdded:Wait() 
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
local Humanoid = Character:WaitForChild("Humanoid")
local Combo 
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local MiscFolder = ReplicatedStorage:WaitForChild("Misc")
local Clashing = MiscFolder:WaitForChild("Clashing")
local Ouwigahara = ReplicatedStorage:FindFirstChild("Ouwigahara") 
local Powerups = Ouwigahara and Ouwigahara:FindFirstChild("Powerups")
local Remotes = ReplicatedStorage:WaitForChild("Remotes")
local IceCounter = Remotes:WaitForChild("ice_counter_remoteasd")
local DrumRemote = Remotes:WaitForChild("war_Drums_remote")
local HeartAblaze = Remotes:WaitForChild("heart_ablaze_mode_remote")
local GodSpeed = Remotes:WaitForChild("thundertang123")
local Furiosity = Remotes:WaitForChild("clan_furiosity_add")
local KamadoHeal = Remotes:WaitForChild("heal_tang123asd")
local ToServer = Remotes:WaitForChild("To_Server")
local PDodge = Remotes:WaitForChild("P_Dodge")
local Handle_Initiate_S_ = ToServer:WaitForChild("Handle_Initiate_S_")
local Handle_Initiate_S = ToServer:WaitForChild("Handle_Initiate_S")
local PlayerValues = ReplicatedStorage:WaitForChild("PlayerValues")
local PlayerData = ReplicatedStorage:WaitForChild("Player_Data")
local LocalValues = PlayerValues:WaitForChild(Player.Name)
local LocalData = PlayerData:WaitForChild(Player.Name)
local BreathingProgress = LocalData:WaitForChild("BreathingProgress")
local BreathingCount = BreathingProgress:WaitForChild("1")
local BreathingNew = BreathingProgress:WaitForChild("2")
local DemonProgress = LocalData:WaitForChild("DemonProgress")
local DemonCount = DemonProgress:WaitForChild("1")
local DemonNew = DemonProgress:WaitForChild("2")
local Clan = LocalData:WaitForChild("Clan")
local Spins = LocalData:WaitForChild("Spins")
local Race = LocalData:WaitForChild("Race")
local Yen = LocalData:WaitForChild("Yen")
local Inventory = LocalData:WaitForChild("Inventory")
local TweenService = game:GetService("TweenService")
local Bindable = Instance.new("BindableEvent")
local KillAuraReady = false  
local Status = false
local Linear = Enum.EasingStyle.Linear 
local Multiplier = 1
local LastTween = {Pause = function() end}
local BreathingLabel, DemonLabel, ClanLabel, SpinLabel, CClan, RaceLabel, RRace, AntiSun, ToggleGod, ToggleSpeed, ToggleAblaze, BossLabel
local TweenSpeed = 500 
local Current = true 
local RG = getrenv()._G 
local Entities = {} 
local Bosses = {} 
local Mobs = {} 
local Weapons = {
    ["Scythe"] = "Scythe_Combat_Slash", 
    ["Sword"] = "Sword_Combat_Slash",
    ["Claw"] = "claw_Combat_Slash",
    ["Fans"] = "fans_combat_slash",
    ["Fist"] = "fist_combat"
}
local All = {
    ["Text"] = ""
}
local Races = {
    [1] = "Human",
    [2] = "Slayer",
    [3] = "Demon",
}
local Map1 = {
    ["Kiribating Village"] = CFrame.new(120, 282, -1743),
    ["Zapiwara Cave"] = CFrame.new(-38, 275, -2403),
    ["Ushumaro Village"] = CFrame.new(-90, 354, -3170),
    ["Butterfly Mansion"] = CFrame.new(3001, 316, -3806),
    ["Final Selection"] = CFrame.new(5258, 365, -2422),
    ["Zapiwara Mountain"] = CFrame.new(-366, 425, -2371),
    ["Wind Trainer"] = CFrame.new(1797, 334, -3466),
    ["Kabiwaru Village"] = CFrame.new(2015, 315, -3051),
    ["Waroru Cave"] = CFrame.new(689, 261, -2469),
    ["Ouwbayashi Home"] = CFrame.new(1241, 320, -4568),
    ["Dangerous Woods"] = CFrame.new(3839, 342, -4177)
}

local Map2 = {
    ["Nomay Village"] = CFrame.new(3562, 673, -2109),
    ["Mugen Train Station"] = CFrame.new(783, 495, 900),
    ["Wop City"] = CFrame.new(-31, 599, -431),
    ["Village 2"] = CFrame.new(1215, 567, 95),
    ["Cave 1"] = CFrame.new(4252, 671, 581),
    ["Cave 2"] = CFrame.new(1182, 485, -1192),
    ["Mist trainer location"] = CFrame.new(4324, 671, -569),
    ["Akeza Cave"] = CFrame.new(1902, 554, -150),
    ["Frozen Lake"] = CFrame.new(2049, 481, -769),
    ["Beast Cave"] = CFrame.new(1840, 481, 37),
    ["Wop's training grounds"] = CFrame.new(223, 595, 483),
    ["Snowy Place"] = CFrame.new(379, 531, -2865),
    ["Devourers Jaw"] = CFrame.new(480, 507, -1864),
    ["Sound Cave"] = CFrame.new(1828, 487, -2770)
}

local Godmodes = {
    "Water_Surface_Slash",
    "Water_fall_basin",
    "insect_breathing_dance_of_the_centipede",
    "blood_burst_explosive_choke_slam",
    "explosive_demon_art_blood_burst",
    "Wind_breathing_black_wind_mountain_mist",
    "flame_breathing_flaming_eruption",
    "scythe_asteroid_reap",
    "Beast_breathing_devouring_slash",
    "akaza_flashing_williow_skillasd",
    "akaza_bda_compass_needle",
    "dream_bda_flesh_monster",
    "swamp_bda_swamp_domain",
    "snow_breatihng_layers_frost",
    "snow_breathing_illusory_Storm",
    "sound_breathing_smoke_screen",
    "ice_demon_art_bodhisatva"
}  

local Map2List = {}
local Map1List = {}
for i,v in next, Map2 do insert(Map2List, i) end
for i,v in next, Map1 do insert(Map1List, i) end
local AliveBosses = {}
local Signals = Library.signals

local IsBoss = function(Instance)
    if BossFolder then 
        return Instance:IsDescendantOf(BossFolder) 
    else 
        return false 
    end 
end 

local find = function(Table, Value) for i,v in next, Table do if v == Value then return i end end end

local Added = function(Instance)
    local Parent = Instance.Parent 
    if (not Instance:IsA("Model")) or ((not Parent:IsA("Configuration")) and (not Parent:IsA("Folder"))) then return end 
    local Config = Parent:WaitForChild("Npc_Configuration")
    Config = require(Config)
    local Spawn = Config.Npc_Spawning.Spawn_Locations[1]
    if IsBoss(Instance) then 
        insert(AliveBosses, Instance.Name)
        Bosses[Instance.Name] = Instance.Name 
    else 
        Mobs[Instance.Name] = Instance.Name 
    end 
    insert(Entities, {Instance, Spawn})
end 

local Removed = function(Instance)
    if IsBoss(Instance) then 
        local Found = find(AliveBosses, Instance.Name) 
        if Found then 
            AliveBosses[Found] = nil
        end 
    end  
    for i,v in next, Entities do 
        if v[1] == Instance then 
            Entities[i] = nil 
        end 
    end 
end 

if BossFolder then 
    for i,v in next, BossFolder:GetChildren() do 
        Added(v)
    end 
    BossFolder.ChildAdded:Connect(Added)
    BossFolder.ChildRemoved:Connect(Removed)
end 

if MobFolder then 
    for i,v in next, MobFolder:GetChildren() do 
        Added(v)
    end 
    MobFolder.ChildAdded:Connect(Added)
    MobFolder.ChildRemoved:Connect(Removed)
end 


-- Arrow Toggle (L1)
Farming:AddToggle({
    Name = "L1",
    Value = false,
    Flag = "Arrow",
    Callback = function(State)
        Arrow = State
        if State then
            task.spawn(function()
                while Arrow and IsOpen() do
                    pcall(function()
                        Handle_Initiate_S:FireServer("skil_ting_asd", Player, "arrow_knock_back", 5)
                        for i = 1, 50 do
                            local Data = GetClosestMob()
                            local Mob = Data[3]
                            local CF = Data[1]
                            if CF and IsOpen() and Arrow then
                                Handle_Initiate_S:FireServer("arrow_knock_back_damage", Character, CF, Mob, 200, 200)
                            end
                            task.wait(0.13)
                        end
                    end)
                    task.wait()
                end
            end)
        end
    end
})

-- Arrow2 Toggle (L2)
Farming:AddToggle({
    Name = "L2",
    Value = false,
    Flag = "Arrow2",
    Callback = function(State)
        Arrow2 = State
        if State then
            task.spawn(function()
                while Arrow2 and IsOpen() do
                    Handle_Initiate_S:FireServer("skil_ting_asd", Player, "arrow_knock_back", 5)
                    for i = 1, 50 do
                        local Data = GetClosestMob()
                        local Mob = Data[3]
                        if Mob and Arrow2 and IsOpen() then
                            Handle_Initiate_S:FireServer("Arrow_knock_back_throw", Player, HumanoidRootPart, HumanoidRootPart.CFrame + Vector3.new(0, Y or 1, 0))
                            local Part = Debree:WaitForChild(Player.Name.."'s arrow")
                            local Damage = Part:FindFirstChild("Damagething")
                            Handle_Initiate_S:FireServer("Koketsu_arrow_damage", Character, Part, HumanoidRootPart.CFrame, Mob)
                            task.spawn(function()
                                while Damage and Damage.Parent and IsOpen() do
                                    Damage:FireServer()
                                    task.wait()
                                end
                            end)
                        end
                        task.wait(0.13)
                    end
                    task.wait()
                end
            end)
        end
    end
})

-- Bring All Button
Farming:AddButton({
    Name = "Bring All",
    Callback = function()
        Handle_Initiate_S_:InvokeServer("skil_ting_asd", Player, "arrow_knock_back", 5)
        Handle_Initiate_S_:InvokeServer("Arrow_knock_back_throw", Player, HumanoidRootPart, HumanoidRootPart.CFrame + Vector3.new(0, Y or 1, 0))
        local Part = Debree:WaitForChild(Player.Name.."'s arrow")
        for _, v in next, Players:GetPlayers() do
            if v == Player then continue end
            Handle_Initiate_S:FireServer("Koketsu_arrow_damage", Character, Part, HumanoidRootPart.CFrame, v.Character)
        end
    end
})

-- Y Offset Slider
Farming:AddSlider({
    Name = "Y Offset",
    Min = -1000,
    Max = 1000,
    Value = 1,
    Flag = "Y",
    Callback = function(State)
        Y = State
    end
})

-- Godmode Toggle + Skill Dropdown
local SelectedSkill = ""
Farming:AddToggle({
    Name = "Godmode",
    Value = false,
    Flag = "Godmode",
    Callback = function(State)
        Godmode = State
        if State then
            task.spawn(function()
                while Godmode and IsOpen() do
                    Handle_Initiate_S:FireServer("skil_ting_asd", Player, SelectedSkill, 1)
                    task.wait() -- küçük gecikme koymak performans için iyi olur
                end
            end)
        end
    end
})

Farming:AddDropdown({
    Name = "Skill",
    List = Godmodes,
    Flag = "Skill",
    Nothing = "Select Skill..",
    Callback = function(State)
        SelectedSkill = State
    end
})

-- Farm Toggle
Farming:AddToggle({
    Name = "Farm",
    Value = false,
    Flag = "Farm",
    Callback = function(State)
        XLROPFK = State
        if State then
            task.spawn(function()
                while XLROPFK and IsOpen() do
                    local Table = GetClosestMob()
                    local Pos = Table[1]
                    local Magnitude = Table[2]
                    if Pos and Magnitude then
                        if Magnitude > 100 then
                            LastTween:Pause()
                            LastTween = TweenService:Create(HumanoidRootPart, TweenInfo.new(Magnitude / TweenSpeed, Enum.EasingStyle.Linear), {CFrame = Pos})
                            LastTween:Play()
                        elseif KillAuraReady then
                            HumanoidRootPart.CFrame = Pos
                            Bindable:Fire()
                        else
                            HumanoidRootPart.CFrame = Pos + Vector3.new(0, Distance, 0)
                        end
                    end
                    task.wait()
                end
            end)
        end
    end
})

-- Block Toggle
Farming:AddToggle({
    Name = "Block",
    Value = false,
    Flag = "Block",
    Callback = function(State)
        LROPTMFLG = State
        if State then
            task.spawn(function()
                while LROPTMFLG and IsOpen() do
                    Handle_Initiate_S:FireServer("add_blocking", "", os.clock(), LocalValues, 1)
                    task.wait()
                end
            end)
        else
            Handle_Initiate_S_:InvokeServer("remove_blocking", LocalValues)
        end
    end
})

-- Bosses Dropdown (Multi)
Farming:AddDropdown({
    Name = "Bosses",
    List = Bosses,
    Multi = true,
    Flag = "Bosses",
    Callback = function(State)
        SelectedBosses = State
    end
})

-- Mobs Dropdown (Multi)
Farming:AddDropdown({
    Name = "Mobs",
    List = Mobs,
    Multi = true,
    Flag = "Mobs",
    Callback = function(State)
        SelectedMobs = State
    end
})

-- Farm Player Toggle
PPlayers:AddToggle({
    Name = "Farm Player",
    Value = false,
    Flag = "FarmPlayer",
    Callback = function(State)
        XLROPRT = State
        if State then
            task.spawn(function()
                while XLROPRT and IsOpen() do
                    local Table = GetClosestPlayer()
                    local Pos = Table[1]
                    local Magnitude = Table[2]
                    if Pos and Magnitude then
                        if Magnitude > 100 then
                            LastTween:Pause()
                            LastTween = TweenService:Create(HumanoidRootPart, TweenInfo.new(Magnitude / TweenSpeed, Enum.EasingStyle.Linear), {CFrame = Pos})
                            LastTween:Play()
                        elseif KillAuraReady then
                            HumanoidRootPart.CFrame = Pos
                            Bindable:Fire()
                        else
                            HumanoidRootPart.CFrame = Pos + Vector3.new(0, Distance, 0)
                        end
                    end
                    task.wait()
                end
            end)
        end
    end
})

-- Tween Speed Slider
Settings:AddSlider({
    Name = "Tween Speed",
    Value = 450,
    Min = 100,
    Max = 600,
    Flag = "Tween",
    Callback = function(State)
        TweenSpeed = State
    end
})

-- Distance Slider
Settings:AddSlider({
    Name = "Distance",
    Value = 35,
    Min = 0,
    Max = 100,
    Flag = "Distance",
    Callback = function(State)
        Distance = State
    end
})

-- BossStatus Labels (aynı metin 8 kez eklenmiş, örnek olarak sadece 4 ekledim)
BossStatus:AddLabel(All)
BossStatus:AddLabel(All)
BossStatus:AddLabel(All)
BossLabel = BossStatus:AddLabel(All)

-- Kill Aura Toggle
Aura:AddToggle({
    Name = "Kill Aura",
    Value = false,
    Flag = "KillAura",
    Callback = function(State)
        OTPRMDL = State
        if State then
            task.spawn(function()
                while OTPRMDL and IsOpen() do
                    KillAuraReady = true
                    Bindable.Event:Wait()
                    task.wait(0.2)
                    repeat task.wait() until Combo.Value < 1
                    for i = 1, 4 do FireAttack(i) end
                    FireAttack(919)
                    for i = 1, 4 do FireAttack(i) end
                    FireAttack(919)
                    for i = 1, 4 do FireAttack(i) end
                    FireAttack(919)
                    InvokeAttack(1)
                    task.wait(0.2)
                    KillAuraReady = false
                    task.wait(0.6)
                end
            end)
        end
    end
})

-- Weapon Dropdown
Aura:AddDropdown({
    Name = "Weapon",
    List = {"Scythe", "Sword", "Claw", "Fans", "Fist"},
    Nothing = "Select Weapon..",
    Flag = "Weapon",
    Callback = function(State)
        if State == "Scythe" then
            UIWeaponType = 1
        elseif State == "Sword" then
            UIWeaponType = 2
        elseif State == "Claw" then
            UIWeaponType = 3
        elseif State == "Fans" then
            UIWeaponType = 4
        elseif State == "Fist" then
            UIWeaponType = 5
        end
    end
})

-- Teleports Buttons
Teleports:AddButton({Name = "West", Callback = function() Teleport(West) end})
Teleports:AddButton({Name = "East", Callback = function() Teleport(East) end})
Teleports:AddButton({Name = "City", Callback = function() Teleport(City) end})
Teleports:AddButton({Name = "Mountains", Callback = function() Teleport(Mountains) end})

-- MiscMain Toggle
MiscMain:AddToggle({Name = "Auto Stamina", Value = false, Flag = "AutoStamina"})
MiscMain:AddToggle({Name = "Auto Buy Weapon", Value = false, Flag = "AutoBuyWeapon"})
MiscMain:AddToggle({Name = "Auto Collect Money", Value = false, Flag = "AutoCollectMoney"})
MiscMain:AddToggle({Name = "Auto Grab Armor", Value = false, Flag = "AutoGrabArmor"})
MiscMain:AddToggle({Name = "Auto Damage Upgrade", Value = false, Flag = "AutoDamageUpgrade"})

-- MiscMisc Toggle
MiscMisc:AddToggle({Name = "Disable Stamina", Value = false, Flag = "DisableStamina"})
